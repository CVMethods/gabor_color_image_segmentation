#  Copyright (c) 2017-2018 Uber Technologies, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

"""Minimal example of how to read samples from a dataset generated by `generate_hello_world_dataset.py`
using plain Python"""

import os
import numpy as np
from pyarrow.parquet import ParquetFile, read_schema, read_metadata, ParquetDataset
from petastorm import make_reader
from pyspark.sql import SparkSession
import pdb
import matplotlib.pyplot as plt

def read_dataset_python(dataset_url):
    Schema_headers = list(ParquetDataset('data/petastorm_datasets/test/Berkeley_images/').read_pandas().to_pandas())
    print(Schema_headers)

    with make_reader(dataset_url) as reader:
        # Pure python
        for ii, sample in enumerate(reader):
            print(sample)
        print('\n')


def read_dataset_pyspark(dataset_url):
    spark = SparkSession \
        .builder \
        .master('local[1]') \
        .getOrCreate()

    # Create a dataframe object from a parquet file
    dataframe = spark.read.parquet(dataset_url)

    # Show a schema
    dataframe.printSchema()

    # Count all
    dataframe.count()

    # Show just some columns
    dataframe.select('index').show()

    # This is how you can use a standard SQL to query a dataset. Note that the data is not decoded in this case.
    number_of_rows = spark.sql(
        'SELECT count(img_id) '
        'from parquet.`{}` '.format(dataset_url)).collect()
    print('Number of rows in the dataset: {}'.format(number_of_rows[0][0]))




if __name__ == '__main__':

    dataset_images_url ='file://' + os.getcwd() + '/data/petastorm_datasets/test/Berkeley_images'
    dataset_features_url ='file://' + os.getcwd() + '/data/petastorm_datasets/test/Berkeley_GaborFeatures'

    read_dataset_python(dataset_images_url)
    read_dataset_python(dataset_features_url)

    read_dataset_pyspark(dataset_images_url)
    read_dataset_pyspark(dataset_features_url)

